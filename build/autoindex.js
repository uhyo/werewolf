'use strict';
// Automatically generate index.ts for the purpose of exporting
const fs = require('fs');
const path = require('path');

const targets = ['core'];

targets.forEach(genIndex);

function genIndex(target){
    // resolve
    const targetPath = path.resolve(target);
    // read dir
    const files = fs.readdirSync(targetPath);
    // list child files
    const children = [];
    const dirs = [];
    for (let f of files){
        const ab = path.resolve(targetPath, f);
        const st = fs.statSync(ab);
        if (st.isDirectory()){
            dirs.push(ab);
        }
    }
    // recursiveにdirsを処理
    for (let d of dirs){
        genIndex(d);
    }
    // index.tsを生成
    const header = `// This file is automatically generated by the task build:autogen
`;
    let reader = '';
    let writer = '';
    for (let f of files){
        if (f === 'index.ts'){
            // Avoid self reference.
            continue;
        }
        const ext = path.extname(f);
        const b = path.basename(f, ext).replace(/\W+/, '');
        reader += `import * as _${b} from './${f}';\n`;
        writer += `    _${b} as ${b},\n`;
    }
    const result = `${header}
${reader}
export {
${writer}};
`;
    const writeTarget = path.resolve(target, 'index.ts');
    fs.writeFileSync(writeTarget, result, 'utf8');
}
